services:
  api:
    container_name: api
    build:
      context: ./WebBackend  
      dockerfile: /DOCKERFILE
    ports:
      - "5005:5005"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    networks:
      - servicenetwork
    depends_on:
      - postgres
      - redis
      - rabbitmq
      - seq
    restart: always
  microservice:
    container_name: microservice
    build:
      context: ./NeiroBackend
      dockerfile: DOCKERFILE
    networks:
      - servicenetwork
    depends_on:
      - rabbitmq
    restart: always
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: diplom
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    networks:
      - servicenetwork
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: redis
    restart: always
    networks:
      - servicenetwork
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]

  rabbitmq:
    image: "rabbitmq:management"
    container_name: rabbitmq
    restart: always
    networks:
      - servicenetwork 
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - servicenetwork
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - servicenetwork
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
  
  seq:
    image: datalust/seq
    container_name: seq
    ports:
      - "5341:80"
    environment:
      - ACCEPT_EULA=Y
    networks:
      - servicenetwork
    volumes:
      - seq_data:/data

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
  prometheus_data:
  grafana_data:
  seq_data:

networks:
  servicenetwork:  
    driver: bridge