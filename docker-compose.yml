services:
  api:
    container_name: api
    build:
      context: ./WebBackend  
      dockerfile: /DOCKERFILE
    ports:
      - "5005:5005"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    networks:
      - diplomnetwork
    depends_on:
      - postgres
      - redis
      - rabbitmq
    restart: always
  microservice:
    container_name: microservice
    build:
      context: ./NeiroBackend
      dockerfile: DOCKERFILE
    networks:
      - diplomnetwork
    depends_on:
      - rabbitmq
    restart: always
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: diplom
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    networks:
      - diplomnetwork
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: redis
    restart: always
    networks:
      - diplomnetwork
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]

  rabbitmq:
    image: "rabbitmq:management"
    container_name: rabbitmq
    restart: always
    networks:
      - diplomnetwork 
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:

networks:
  diplomnetwork:  
    driver: bridge